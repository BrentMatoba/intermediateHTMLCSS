Introduction:
Grid and flexbox are complementary, don't think of it as one or the other, but rather as two tools that can be used in concert.

Learning outcomes:
1. Know when you might want to use flexbox over Grid
2. Know when you might want to use grid over flexbox.
3. Know when you might want to use the two together.

content first vs layout first design.
A way to decide between grid and flexbox is to consider if your design starts from the content, or from the layout.

In content first design, you begin with clarity of how the content should be, and the layout follows. This is ag reat opportunity to use flexbox. Its flexible nature 
gives you control of behavior of items through logical rules. How they grow, shrink, their ideal size and position in relation to ehac other, all make the layout
dynamic. While flexbox gives you control over its element, the final layout is only a consequence. Depending on the dimensions of the flex container, its general
layout can change a lot.

In layout first design, you decide how you want the pieces to be arranged, then fill in the content. That is when grid shines. Defining grid row and colum tracks gives
you full control of layout. Content in a grid can only fill the spaces of the explicit or implicit tracks. So, when you have an idea of how the big picture of a container
should look like, grid is the clear choice.

